@import "tailwindcss";


:root {
  --background: #ffffff;
  --foreground: #171717;
  --header-h: 70px;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

@layer utilities {
  .title{
    @apply font-semibold text-[48px] leading-[57px] text-black mt-[120px] ;
  }

  .glass{
    @apply bg-[rgba(255,255,255,0.03)]
    backdrop-blur-[4px]
    rounded-[30px]
    border border-[rgba(255,255,255,0.3)]
    overflow-hidden
    shadow-[0_8px_32px_rgba(0,0,0,0.1),_inset_0_1px_0_rgba(255,255,255,0.5),_inset_0_-1px_0_rgba(255,255,255,0.1),_inset_0_0_2px_1px_rgba(255,255,255,0.1)]
    [&::before]:content-[''] [&::before]:absolute [&::before]:inset-x-0 [&::before]:top-0 [&::before]:h-px
    [&::before]:bg-[linear-gradient(90deg,transparent,rgba(255,255,255,0.8),transparent)]
    [&::after]:content-[''] [&::after]:absolute [&::after]:top-0 [&::after]:left-0 [&::after]:w-px [&::after]:h-full
    [&::after]:bg-[linear-gradient(180deg,rgba(255,255,255,0.8),transparent,rgba(255,255,255,0.3))]
  }

  .skill{
    @apply  font-medium text-[16px] leading-[19px] rounded-md px-3 py-1 w-fit
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Pretendard, Arial, Helvetica;
}

.swiper-pagination-bullet-active{
   background:  #ffa9a9  !important;
}

.swiper-3d .swiper-slide-shadow-left {
  border-radius: 1.5rem;
}

.swiper-3d .swiper-slide-shadow-right {
  border-radius: 1.5rem;
}

.swiper.swiper-cards{
  width: 80%;
  max-width: 900px;
}

.swiper-3d .swiper-slide-shadow{
  background-color:rgba(0, 0, 0, 0)  !important;
}

.swiper-button-prev, .swiper-button-next-button-prev{
  color: #353535 !important;
  z-index: 80 !important;
  margin-left: -18%;
  width: 24px !important;
  height: 24px !important;
}

.swiper-button-prev, .swiper-button-next{
   color: #353535 !important;
  z-index: 80 !important;
  width: 24px !important;
  height: 24px !important;
}

.wave-lines {
  position: absolute;
  inset: 0;
  filter: blur(22px);
  opacity: 0.55;
  background: repeating-linear-gradient(
  90deg,
  rgba(255, 255, 255, 0.18) 0px,
  rgba(255, 255, 255, 0.18) 2px,
  rgba(255, 255, 255, 0.00) 14px,
  rgba(255, 255, 255, 0.00) 28px
  );
  background-size: 200% 100%;
  background-position: 0% 0%;
  animation: waveShift 5s ease-in-out infinite alternate;
  }


.blob {
  position: absolute;
  border-radius: 9999px;
  filter: blur(70px);
  mix-blend-mode: screen;
  }
.beam-blob-1 {
  width: 80rem; height: 24rem;
  left: -10%; top: 35%;
  background: radial-gradient(60% 80% at 35% 50%, rgba(171, 191, 255, 0.45) 0%, rgba(195, 206, 255, 0.267) 70%),
  radial-gradient(60% 80% at 65% 50%, rgba(120, 152, 255, 0.35) 0%, rgba(120, 174, 255, 0) 70%);
  animation: floatBeam1 5s ease-in-out infinite alternate;
  opacity: 0.85;
  }
.beam-blob-2 {
  width: 100rem; height: 6rem;
  left: 0%; top: 35%;
  background: radial-gradient(60% 80% at 40% 50%, rgba(34, 75, 255, 0.747) 0%, rgba(118, 149, 216, 0.774) 70%),
  radial-gradient(60% 80% at 70% 50%, rgba(140, 180, 255, 0.562) 0%, rgba(140, 157, 255, 0) 70%);
  animation: floatBeam2 3s ease-in-out infinite alternate;
  opacity: 15;
  }


/* 배경화면 애니메이션 */
@keyframes waveXY {
  0%   { transform: translate(calc(var(--dx, 0px) * -0), calc(var(--dy, 0px) * 30)); }
  50%  { transform: translate(calc(var(--dx, 0px) *  0), calc(var(--dy, 0px) *  0)); }
  100% { transform: translate(calc(var(--dx, 0px) * -0), calc(var(--dy, 0px) * 30)); }
}

.wave-anim-slow { animation: waveXY 12s ease-in-out infinite; will-change: transform; }
.wave-anim      { animation: waveXY 8s ease-in-out infinite; will-change: transform; }
.wave-anim-fast { animation: waveXY 4s  ease-in-out infinite; will-change: transform; }


.wave-layer {
  position: absolute;
  top: 0%;
  left: 0%;
  /* bleed(%)를 커스텀 변수로 받아서 100% + bleed 만큼 확대 */
  width: calc(100vw + var(--bleed, 110vw));
  height: calc(100vh + var(--bleed, 110vh));
  transform: translate(-50%, -50%);
  object-fit: cover;
  pointer-events: none;
}
